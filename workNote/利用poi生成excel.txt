// TODO: 2019/6/19 合并单元格

使用poi的时候的步骤：
1.hssfwork work  = new Hssfwork();//创建一个workbook
2.创建一个sheet,
3.一定要先创建row,才可以通过row.createcell().setvalue()//创建单元格，设置值。
4.如果直接通过sheet.createrow()来创建就只会有一行。
5.如果存在中文，可以设置列宽。
6.Sxxssfwork的效率比较高。将数据持久化，写入到文件中，避免oom(内存耗尽)
7.

-------------------------------------------------------------------------------
                //循环数据库表中的每一行,来得到每一行的数据
                while (rs_struts.next()) {
                    //每循环一次创建一行从 1 开始
                    SXSSFRow row = sheet.createRow(rowNum);
                    tempo = new String[columnCount];
                    for (int i = 0; i < columnCount; i++) {
                        //创建行的单元格,从0开始
                        SXSSFCell cell = row.createCell(i);
                        //自动适应列宽
                        sheet.autoSizeColumn(i);
                        //得到字段名
                        String columnName = rs_struts.getMetaData().getColumnName(i + 1);
                        //通过字段名去获取内容
                        tempo[i] = rs_struts.getString(columnName);
                        //设置单元格内容
                        cell.setCellValue(tempo[i]);
                    }
                    //每次循环结束后要使数组为空，方便存储数据库表中下一行的数值
                    tempo = null;
                    rowNum++;
                }
                //已经知道了有多少行。列和行都是从0开始。
               
                //获取工作表
                SXSSFSheet sheet1 = work.getSheetAt(0);
                //获取到第一个数据
                String str1 = sheet1.getRow(1).getCell(1).getStringCellValue();
                //起始
                int firstclon=2;
                //结束
                int lastClon=0;
                for (int i = 1; i <=1; i++) {
                    //获取第一行数据
                    for (int j = 2; j <= rowNum; j++) {
                        //i表示获取第几列的数据，j表示第几行
                        if(!(ObjectUtils.isEmpty(sheet1.getRow(j).getCell(i)))) {
                            String str2 = sheet1.getRow(j).getCell(i).getStringCellValue();
                            if (str2.equals(str1)) {
                                lastClon = j;
                            } else {
                                firstclon=j;
                                str1 = str2;
                                if (lastClon - firstclon > 0) {
                                    CellRangeAddress region = new CellRangeAddress(firstclon, lastClon, i, i);
                                    sheet.addMergedRegion(region);
                                }
                            }
                        }

                    }
                    //一次循环完之后要将位置初始化
                    firstclon=2;
                    lastClon=0;
                }
------------------------------------------------------------------------------
//判断数据类型
switch (cell.getCellType()) {
                        case HSSFCell.CELL_TYPE_NUMERIC: // 数字
                            value = cell.getNumericCellValue() + "";
                            if (HSSFDateUtil.isCellDateFormatted(cell)) {
                                Date date = cell.getDateCellValue();
                                if (date != null) {
                                    value = new SimpleDateFormat("yyyy-MM-dd").format(date);
                                } else {
                                    value = "";
                                }
                             } else {
                                 value = new DecimalFormat("0").format(cell.getNumericCellValue());
                             }
                            break;
                        case HSSFCell.CELL_TYPE_STRING: // 字符串
                            value = cell.getStringCellValue();
                            break;
                        case HSSFCell.CELL_TYPE_BOOLEAN: // Boolean
                            value = cell.getBooleanCellValue() + "";
                            break;
                        case HSSFCell.CELL_TYPE_FORMULA: // 公式
                            value = cell.getCellFormula() + "";
                            break;
                        case HSSFCell.CELL_TYPE_BLANK: // 空值
                            value = "";
                            break;
                        case HSSFCell.CELL_TYPE_ERROR: // 故障
                            value = "非法字符";
                            break;
                        default:
                            value = "未知类型";
                            break;
                        }
